FROM python:3.6
MAINTAINER Rajat Rasal <rrr2417@ic.ac.uk>

COPY devito.tar.gz / 
RUN tar -xzf devito.tar.gz
RUN rm -rf devito.tar.gz

COPY config app/config
COPY notebooks/* app/ 

# Install Tini that necessary to properly run the notebook service in docker
# http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#docker-cmd
ENV TINI_VERSION v0.9.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
# for further interaction with kubernetes
ADD https://storage.googleapis.com/kubernetes-release/release/v1.10.3/bin/linux/amd64/kubectl /usr/sbin/kubectl
RUN chmod +x /usr/bin/tini && chmod 0500 /usr/sbin/kubectl

RUN apt-get update && apt-get install -y -q \ 
    mpich \ 
    libmpich-dev

# Add the ubuntu-toolchain-r test ppa
RUN echo "deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu xenial main" > /etc/apt/sources.list.d/ubuntu-toolchain-r-ppa-xenial.list

# Import the Launchpad PPA public key
RUN gpg --keyserver keyserver.ubuntu.com --recv 1E9377A2BA9EF27F
RUN gpg --export --armor BA9EF27F | apt-key add -

# Upgrade to the most recent package set
RUN apt-get update
RUN apt-get -y dist-upgrade

# Needed for the conda and devito installs later
RUN apt-get -y install wget bzip2 git make

# Default gcc version to install; can be overridden in Jenkinsfile
ARG gccvers=4.9
ENV DEVITO_ARCH=gcc-$gccvers

# Install gcc/g++
RUN apt-get -y install gcc-$gccvers g++-$gccvers

# Set up alternatives
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$gccvers 10

RUN python3 -m venv /venv && \
    /venv/bin/pip install --no-cache-dir --upgrade pip && \
    /venv/bin/pip install --no-cache-dir jupyter && \
    /venv/bin/pip install --no-cache-dir -r /Devito/requirements.txt && \
    /venv/bin/pip install --no-cache-dir -e /Devito/ && \
    /venv/bin/pip install --no-cache-dir dask-kubernetes && \ 
    /venv/bin/pip install --no-cache-dir numpy==1.14.4 && \
    /venv/bin/pip install --no-cache-dir tensorflow && \ 
    /venv/bin/pip install --no-cache-dir --upgrade google-cloud-storage && \
    /venv/bin/pip install --no-cache-dir jgscm && \
    /venv/bin/pip install --no-cache-dir bokeh

ENV DEVITO_ARCH="gcc-4.9"
ENV DEVITO_OPENMP="0"
ENV GOOGLE_APPLICATION_CREDENTIALS="config/google_app_creds.json"

WORKDIR /app
EXPOSE 8888
ENTRYPOINT ["/usr/bin/tini", "--"]
